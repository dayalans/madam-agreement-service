spring.main.banner-mode=off
logging.level.org.springframework=ERROR
server.port=7013
spring.datasource.initialization-mode=always
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5433/ucinstance
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto= update
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace

# To access another secured micro-service
security.oauth2.client.client-id=easybank-callcentre
security.oauth2.client.client-secret=BbIfZA1Xl1CMhafIZOI3rpBIBYsHeeIy
security.oauth2.client.user-authorization-uri=${rest.security.issuer-uri}/protocol/openid-connect/auth
security.oauth2.client.access-token-uri=${rest.security.issuer-uri}/protocol/openid-connect/token
security.oauth2.client.scope=openid
security.oauth2.client.grant-type=client_credentials

spring.kafka.producer.bootstrap-servers= localhost:9092,localhost:9093,localhost:9094
spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.LongSerializer
spring.kafka.producer.value-serializer= org.apache.kafka.common.serialization.StringSerializer

spring.application.name=agreement-ucinstance-service
eureka.client.register-With-Eureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http://localhost:7010/eureka
eureka.instance.preferIpAddress=true